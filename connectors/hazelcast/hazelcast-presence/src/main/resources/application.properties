#
# Application name, version and description are displayed under the management endpoint "/info".
#
# When running under IDE, spring.application.name and info.app.version will be used.
# Otherwise, the application name and version are retrieved from the packaged JAR file.
#
spring.application.name=presence-monitor
info.app.version=1.0.0
info.app.description=Presence Monitor
#
# Keep this default value because you can change the port
# through docker port mapping
#
server.port=8080
#
# DO NOT CHANGE the URL path for static content
#
spring.mvc.static-path-pattern=/**
#
# where to load the static files
#
# For embedded resources --> classpath:/public/
# For files in local file system --> file:/opt/html/
#
# Please add welcome page as "index.html"
#
spring.resources.static-locations=classpath:/public/

#
# The root context is used by Spring Boot's
# RequestMapping REST endpoints and static content.
#
# Therefore, JAX-RS REST endpoints must use another URL path
# We recommend "/api"
#
spring.jersey.application-path=/api
#
# scan these packages for JAX-RS endpoints
# (use command separated list if more than one package)
#
web.component.scan=com.accenture
#
# application working directories
# for cloud native application, you must assume the the local file system as transient.
#
application.work.location=/tmp/lambda/apps
application.identity.location=/tmp/lambda/identities
application.credentials.location=/tmp/lambda/credentials

#
# websocket configuration
#
#websocket.connect.timeout=30
#websocket.idle.timeout=60
#websocket.text.size=65536
#websocket.binary.size=65536

#
# cloud.connector is hazelcast for this presence monitor
#
cloud.connector=hazelcast

#
# Hazelcast cluster is a comma separated domain or IP address with port
#
hazelcast.cluster=127.0.0.1:5701,127.0.0.1:5702
hazelcast.namespace=connector

#
# for presence monitor only
#
service.monitor=true

#
# health admin endpoint dependencies
#
node.info=node.info
mandatory.health.dependencies=cloud.connector.health
#optional.health.dependencies=other.service.health

#
# Optional application configuration management
#
# When app.config.manager is turned on, the config management REST endpoint will be available.
# User applications that need config management may then turn on app.config.client
#
app.config.manager=false
#
# The default configuration parameters are stored in app-config.yaml.
# Configuration parameters can be updated online and the current version is stored in the local file system
# under app.config.store path.
#
# These runtime parameters override the application.properties for each application container.
#
# app.config.key is a comma separated list of key. Each key is labeled with an identifier.
# In this example, there are 2 keys. The first one is the current key.
# The remaining ones are keys from lower deployment environment or older keys
#
app.config.key=non_prod_002:get_this_from_the_environment, non_prod_001:lower_env_key
app.config.yaml=file:/tmp/config/app-config.yaml, classpath:/app-config.yaml
app.config.store=/tmp/config/store

env.variables=APP_CONFIG_KEY:app.config.key,APP_CONFIG_YAML:app.config.yaml,HAZELCAST_CLUSTER:hazelcast.cluster
