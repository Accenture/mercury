#
# Application name, version and description are displayed under the management endpoint "/info".
#
# When running under IDE, spring.application.name and info.app.version will be used.
# Otherwise, the application name and version are retrieved from the packaged JAR file.
#
spring.application.name=rest-spring
info.app.version=1.0.0
info.app.description=Spring Boot with pre-configured REST serializers and exception handler
#
# Keep this default value because you can change the port
# through docker port mapping
#
server.port=8083
#
# DO NOT CHANGE the URL path for static content
#
spring.mvc.static-path-pattern=/**
#
# YOU MAY UPDATE THIS AS NEEDED
#
# For embedded resources --> classpath:/public/
# For files in local file system --> file:/opt/html/
#
# Please add welcome page as "index.html"
#
spring.resources.static-locations=classpath:/public/

#
# The root context is used by Spring Boot's
# RequestMapping REST endpoints and static content.
#
# Therefore, JAX-RS REST endpoints must use another URL path
# We recommend "/api"
#
# NORMALLY DO NOT CHANGE THIS
#
spring.jersey.application-path=api
#
# scan these packages for JAX-RS endpoints, WebServlet, WebFilter, WebListener, ServerEndpoint
# (use command separated list if more than one package)
#
# YOU MAY UPDATE THIS AS NEEDED
#
web.component.scan=com.accenture
#
# application working directories
# for cloud native application, you must assume the the local file system as transient.
#
application.work.location=/tmp/lambda/apps
application.identity.location=/tmp/lambda/identities
application.credentials.location=/tmp/lambda/credentials

#
# websocket configuration
#
#websocket.idle.timeout=60
#websocket.text.size=65536
#websocket.binary.size=65536

#
# for application executable unit
#
cloud.connector=event.node
event.node.path=ws://127.0.0.1:8080/event/

#
# advanced features
#
snake.case.serialization=true
#
# health admin endpoint dependencies
#
node.info=node.info
mandatory.health.dependencies=cloud.cache.health,cloud.connector.health
#optional.health.dependencies=other.service.health

#
# environment and system properties to be exposed to the "/env" admin endpoint
#
show.env.variables=USER, TEST
show.application.properties=server.port, cloud.connector

#
# route substitution
#
#application.feature.route.substitution=true
# you can define a route substitution table in a yaml file
#route.substitution.file=classpath:/route-substitution.yaml
# or enter them in a comma separated list. The format of each entry is a:b where b replaces a
#route.substitution=hello.test:hello.world

#
# protected REST endpoints
#
#protected.info.endpoints=/info, /env
#
# API key - browser needs to provide the "X-Info-Key" when visiting protected REST endpoints
#
#info.api.key.label=X-Info-Key
#info.api.key=put_your_value_here_or_set_it_in_environment

#
# HTTP Strict Transport Security (HSTS)
# (to avoid duplicated headers, disable this feature if HSTS header insertion is done external to the application.
#  e.g. API gateway)
# By default, "hsts.feature" is enabled if not configured.
#
hsts.feature=true

#
# this allows the operator to shutdown the system with:
#
# POST /shutdown
#
# content-type: "application/x-www-form-urlencoded"
# body: key=the_shutdown_key&origin=originId
#
# If app.shutdown.key is not defined, the shutdown feature will reject shutdown requests
#
#app.shutdown.key=put_your_value_here_or_set_it_in_environment
