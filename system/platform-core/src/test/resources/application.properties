#
# When running under IDE, this is the application name.
# Otherwise, the application name is retrieved from the packaged JAR file.
#
application.name=platform-core
#
# application working directories
# for cloud native application, you must assume the the local file system as transient.
#
application.work.location=/tmp/lambda/apps
application.identity.location=/tmp/lambda/identities
application.credentials.location=/tmp/lambda/credentials

#
# websocket configuration
#
#websocket.idle.timeout=60
#websocket.text.size=65536
#websocket.binary.size=65536

#
# for web and cloud component registration
#
#web.component.scan=org.platformlambda
#cloud.component.scan=org.platformlambda

#
# cloud.connector =  Kafka | hazelcast | activemq | tibco | ...
#
#cloud.services=service.1, service.3
cloud.connector=none

#
# advanced features
#
snake.case.serialization=true
pom.properties.location=/META-INF/maven/*/*/pom.properties

#
# additional security to protect against model injection to avoid a Jackson deserialization security vulnerability
# comma separated list of model packages that are considered safe to be used for object deserialization
#
safe.data.models=org.platformlambda.core.util.models

#
# route substitution
#
application.feature.route.substitution=true
# you can define a route substitution table in a yaml file
route.substitution.file=classpath:/route-substitution.yaml
# or enter them in a comma separated list. The format of each entry is a:b where b replaces a
#route.substitution=hello.test:hello.world

