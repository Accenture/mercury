image: maven:3.6.1-jdk-8

variables:
    MAVEN_CLI_OPTS: "--show-version -Dorg.slf4j.simpleLogger.showDateTime=true -Dorg.slf4j.simpleLogger.dateTimeFormat=yyyy-MM-dd@HH:mm:ss,SSS"
    MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Djava.awt.headless=true"

cache:
    key: $CI_PIPELINE_IID
    policy: pull
    paths:
    - $CI_PROJECT_DIR/.m2/repository # cache maven repository across all jobs

include:
    - template: Code-Quality.gitlab-ci.yml


stages:
    - build
    - test
    - package
    - deploy


build:
    stage: build
    script:
        - mvn $MAVEN_CLI_OPTS clean compile install -f system/parent
        - mvn $MAVEN_CLI_OPTS clean compile install
    cache:
        key: $CI_PIPELINE_IID
        policy: push # this is the only job that needs to publish to the cache, therefore it is overriding the policy
        paths:
            - $CI_PROJECT_DIR/.m2/repository


############################
# TEST

.test_and_coverage:
    stage: test
    needs: ['build']
    coverage: '/Total.*?([0-9]{1,3})%/'
    artifacts:
        reports:
            junit:
                - $CI_PROJECT_DIR/**/target/surefire-reports/TEST-*.xml
        paths:
            - jacoco
        expire_in: 30 days


# just test platform core
# TODO: is it possible to generate coverage report across all modules?
# The current coverage report is only for the platform core submodule
platform_test:
  extends: .test_and_coverage
  script:
      - mvn $MAVEN_CLI_OPTS test -f system/platform-core
      - ls -la system/platform-core/target/surefire-reports
      - cat system/platform-core/target/site/jacoco/index.html
      - mv system/platform-core/target/site/jacoco jacoco


# test all modules
submodules_test:
  extends: .test_and_coverage
  script:
      - mvn $MAVEN_CLI_OPTS test


############################
# Publish

.publish:
  stage: deploy
  dependencies: ['build', 'submodules_test']
  needs: ['build', 'submodules_test']

snapshot:
  script:
    - echo "Publish snapshot"
    - mvn $MAVEN_CLI_OPTS deploy -s .gitlab_maven_settings.xml -DskipTests

release:
  script:
    - echo "Publish release"
    - mvn $MAVEN_CLI_OPTS deploy -s .gitlab_maven_settings.xml -DskipTests -Drevision=$CI_COMMIT_TAG -f
  only:
    - tags

############################
# JavaDoc

javadoc:
    stage: package
    dependencies:
        - build
    needs: ['build']
    script:
        - mvn $MAVEN_CLI_OPTS javadoc:javadoc -f system/platform-core
        - mv system/platform-core/target/site/apidocs apidocs
    artifacts:
        paths:
            - apidocs
        expire_in: 30 days

pages:
    stage: deploy
    dependencies:
        - platform_test
        - javadoc
    needs: ['platform_test', 'javadoc']
    script:
        - mkdir -p public/coverage public/docs
        - mv jacoco/* public/coverage
        - mv apidocs/* public/docs
    artifacts:
        paths:
        - public
        expire_in: 90 days
