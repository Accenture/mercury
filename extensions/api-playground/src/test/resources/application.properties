#
# Application name, version and description are displayed under the management endpoint "/info".
#
# When running under IDE, spring.application.name and info.app.version will be used.
# Otherwise, the application name and version are retrieved from the packaged JAR file.
#
spring.application.name=api-playground
info.app.version=1.0.0
info.app.description=API playground
#
# Keep this default value because you can change the port
# through docker port mapping
#
server.port=8083
#
# DO NOT CHANGE the URL path for static content
#
spring.mvc.static-path-pattern=/**
#
# Where to load the static files:
#
# For embedded resources --> classpath:/public/
# For files in local file system --> file:/opt/html/
#
# Please add welcome page as "index.html"
#
spring.resources.static-locations=classpath:/public/
#
# The root context is used by Spring Boot's
# RequestMapping REST endpoints and static content.
#
# Therefore, JAX-RS REST endpoints must use another URL path like "/api".
# NORMALLY DO NOT CHANGE THIS unless you are using "/api" for something else
#
jax.rs.application.path=/api
#
# scan these packages for JAX-RS endpoints, WebServlets and Spring components
# (use command separated list if more than one package)
#
web.component.scan=com.accenture
#
# application working directory
# examples:
# /tmp/lambda/apps/{app_name}/queues (where events from elastic queues are temporarily stored when overflow)
# /tmp/lambda/credentials (where public keys are stored)
#
application.work.location=/tmp/lambda/apps
#
# The identities and credentials folders are shared directories in the local file system.
# If the lambda executable is packaged as a docker image, these two folders must be
# exposed as shared resources.
# e.g.
# docker run ... -v /tmp/lambda/identities:{local_file_system_location}
# docker run ... -v /tmp/lambda/credentials:{local_file_system_location}
#
application.identity.location=/tmp/lambda/identities
application.credentials.location=/tmp/lambda/credentials

#
# websocket configuration
#
#websocket.connect.timeout=30
#websocket.idle.timeout=60
#websocket.text.size=65536
#websocket.binary.size=65536

#
# cloud.connector= none | hazelcast | kafka | ...
#
cloud.connector=none

#
# advanced features
#
snake.case.serialization=true
application.feature.streaming=true
