#
# Application name, version and description are displayed under the management endpoint "/info".
#
# When running under IDE, spring.application.name and info.app.version will be used.
# Otherwise, the application name and version are retrieved from the packaged JAR file.
#
spring.application.name=rest-example
info.app.version=1.0.0
info.app.description=Rest Example
#
# Server port when running locally
# This value will be overridden automatically when deployed to cloud
#
server.port=8083
spring.jms.cache.enabled=false
#
# DO NOT CHANGE the URL path for static content
#
spring.mvc.static-path-pattern=/**
#
# Where to load the static files:
#
# For embedded resources --> classpath:/public/
# For files in local file system --> file:/opt/html/
#
# Please add welcome page as "index.html"
#
spring.resources.static-locations=classpath:/public/
#
# The root context is used by Spring Boot's
# RequestMapping REST endpoints and static content.
#
# Therefore, JAX-RS REST endpoints must use another URL path
# We recommend "/api"
#
spring.jersey.application-path=/api
#
# scan these packages for JAX-RS endpoints, WebServlets and Spring components
# (use command separated list if more than one package)
#
web.component.scan=com.accenture
#
# application working directories
# for cloud native application, you must assume the the local file system as transient.
#
application.work.location=/tmp/lambda/apps
application.identity.location=/tmp/lambda/identities
application.credentials.location=/tmp/lambda/credentials

#
# websocket configuration
#
#websocket.connect.timeout=30
#websocket.idle.timeout=60
#websocket.text.size=65536
#websocket.binary.size=65536

#
# cloud.connector = event.node | hazelcast | kafka | ...
# cloud.services = hazelcast.reporter | kafka.reporter | ...
#
# Event Node does not need a reporter because only Hazelcast and Kafka use presence monitor technology
#
cloud.connector=event.node
cloud.services=hazelcast.reporter
presence.monitor=ws://127.0.0.1:8080/ws/presence
event.node.path=ws://127.0.0.1:8080/ws/events/

#
# health admin endpoint dependencies
#
node.info=node.info
mandatory.health.dependencies=cloud.connector.health
#optional.health.dependencies=other.service.health
#
# Hazelcast cluster is a comma separated domain or IP address with port
#
hazelcast.cluster=127.0.0.1:5701,127.0.0.1:5702
hazelcast.namespace=connector

#
# advanced features
#
snake.case.serialization=true

#
# environment variables (comma separated list of environment variable names)
#
# When present, an environment variable will be used as a surrogate Java system property.
# For example, JAVA_HOME will be used as a shadow system property for parameter "java.home" in this property file.
#
# Each environment variable name should be in UPPER_CASE and underscore format.
# To change the mapping, use a colon to customize.
#
# In the following example,
# Environment variable PATH will override property "path.too"
#
#env.variables=PATH:path.too
#path.too=hello world

#
# additional security to protect against model injection to avoid a Jackson deserialization security vulnerability
# comma separated list of model packages that are considered safe to be used for object deserialization
#
# Uncomment and change it to your permitted packages
#
#safe.data.models=org.platformlambda

#
# optional: protected REST endpoints
#
#protected.info.endpoints=/info, /env, /route
#
# API key - browser needs to provide the "X-Info-Key" when visiting protected REST endpoints
#
#info.api.key.label=X-Info-Key
#info.api.key=put_your_api_Key_here_or_use_env_variable
#env.variables=INFO_API_KEY:info.api.key

#
# route substitution
# comma separated list. The format of each entry is a:b where b replaces a
#
#route.substitution=hello.test:hello.world
#application.feature.route.substitution=true

#
# Optional application config management
# DO NOT set app.config.client=true unless you have enable the config manager in event node or presence monitor.
#
app.config.client=false
#
# app.config.key is a comma separated list of key. Each key is labeled with an identifier.
# In this example, there are 2 keys. The first one is the current key.
# The remaining ones are keys from lower deployment environment or older keys
#
app.config.key=non_prod_002:get_this_from_the_environment, non_prod_001:lower_env_key
app.config.endpoint=http://127.0.0.1:8080/api/config

#
# mapping environment variables to parameters
#
#env.variables=APP_CONFIG_KEY:app.config.key,APP_CONFIG_ENDPOINT:app.config.endpoint