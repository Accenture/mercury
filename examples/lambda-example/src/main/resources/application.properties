application.name=lambda-example
info.app.version=1.0.0
info.app.description=Composable application example
#
# scan path for MainApplication
#
web.component.scan=com.accenture

#
# If you don't need REST endpoints, you can disable it with rest.automation=false
#
rest.server.port=8085
rest.automation=true
yaml.rest.automation=classpath:/rest.yaml
#
# websocket configuration
#
#websocket.idle.timeout=60

#
# cloud.connector = none | kafka | hazelcast | ...
# cloud.services = comma separated list of optional cloud services
#
cloud.connector=none
#cloud.services=some.other.cloud.services

#
# health admin endpoint dependencies
#
mandatory.health.dependencies=demo.health

#mandatory.health.dependencies=cloud.connector.health
#optional.health.dependencies=other.service.health

#
# You can stop, suspend or resume an application instance from a presence monitor
# to the current app instance or a remote instance
# except the "presence monitor" that can only be invoked directly.
#
# Shutdown - stop an application so that the container management system will restart it
# suspend - tell the application instance not to accept incoming requests
# resume - tell the application instance to accept incoming requests
#
# POST /shutdown
# POST /suspend/{now | later}
# POST /resume/{now | later}
#
# http header:
# X-App-Instance=origin_id_here
#
# Since this lambda-example app is a java main app without an application server,
# there is no admin endpoints. You can invoke the above command remotely from
# another application instance that has admin endpoints.
#

closed.user.group=1
