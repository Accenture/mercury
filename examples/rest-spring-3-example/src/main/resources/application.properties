#
# Application name, version and description are displayed under the management endpoint "/info".
#
# When running under IDE, spring.application.name and info.app.version will be used.
# Otherwise, the application name and version are retrieved from the packaged JAR file.
#
spring.application.name=rest-spring-2-example
info.app.version=3.0.0
info.app.description=Rest-Spring Example
#
# Server port when running locally
# This value will be overridden automatically when deployed to cloud
#
server.port=8083
websocket.server.port=8086
spring.jms.cache.enabled=false
#
# DO NOT CHANGE the URL path for static content
#
spring.mvc.static-path-pattern=/**
#
# Where to load the static files:
#
# For embedded resources --> classpath:/public/
# For files in local file system --> file:/opt/html/
#
# Please add welcome page as "index.html"
#
spring.web.resources.static-locations=classpath:/public/
#
# scan these packages for JAX-RS endpoints, WebServlets and Spring components
# (use command separated list if more than one package)
#
web.component.scan=com.accenture

#
# websocket configuration
#
#websocket.idle.timeout=60

#
# cloud.connector = none | kafka | hazelcast | activemq | tibco | ...
# cloud.services = comma separated list of optional cloud services
#
cloud.connector=none
#cloud.services=some.other.service

#
# health admin endpoint dependencies
# Please turn on mandatory.health.dependencies=cloud.connector.health if cloud.connector is not "none"
#
#mandatory.health.dependencies=cloud.connector.health
#optional.health.dependencies=other.service.health

#
# advanced features
#
snake.case.serialization=true

#
# additional security to protect against model injection to avoid deserialization security vulnerability
# comma separated list of model packages that are considered safe to be used for object deserialization
#
# Uncomment and change it to your permitted packages
#
#safe.data.models=org.platformlambda

#
# Optional redirection to index.html
# index.redirection is a comma separated list of URI paths
# the root path "/" will return index.html if not configured
#
index.redirection=/
index.page=index.html

#
# You can add environment variables and application properties (comma separated list) here
# for the "/env" endpoint to display
#
#show.env.variables=YOUR_ENV_VARIABLES
show.application.properties=server.port, spring.application.name, cloud.connector

#
# route substitution
#
#application.feature.route.substitution=true
# you can define a route substitution table in a yaml file
#route.substitution.file=classpath:/route-substitution.yaml
# or enter a small list in a comma separated list. The format of each entry is a:b where b replaces a
#route.substitution=hello.test:hello.world

#
# You can shut down, suspend or resume an application instance from a presence monitor
# to the current app instance or a remote instance
# except the "presence monitor" that can only be invoked directly.
#
# Shutdown - stop an application so that the container management system will restart it
# suspend - tell the application instance not to accept incoming requests
# resume - tell the application instance to accept incoming requests
#
# POST /shutdown
# POST /suspend/{now | later}
# POST /resume/{now | later}
#
# http header
#
# X-App-Instance=origin_id_here
#

closed.user.group=1

#
# "event over HTTP" demo
#
# Before you start this rest-spring-example app, build and run the lambda-example at port 8085 first.
#
lambda.example.port=8085
